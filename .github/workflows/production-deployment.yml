---
name: Create production Docker images

on:
  push:
    branches: ['main']
    tags: ['release-*']
    paths: [ 'apps/api/**', 'apps/frontend/**' ]

env:
  REGISTRY: ghcr.io

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Inject version from tag into ENV
        id: release-tag
        run: |
          version=$(echo ${{github.event.client_payload.value}} | cut -d- -f2)
          echo "VERSION=$version" >> $GITHUB_ENV

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push api Docker image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        env:
          DOCKERFILE: ./docker/Dockerfile.backend
          IMAGE_REPOSITORY: ${{ env.REGISTRY }}/${{ github.repository_owner }}/api
          IMAGE_TAG: ${{ env.VERSION }}
        with:
          context: .
          file: $DOCKERFILE
          target: production
          tags: $IMAGE_REPOSITORY/$IMAGE_TAG
          push: true

      - name: Build and push frontend Docker image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        env:
          DOCKERFILE: ./docker/Dockerfile.web
          IMAGE_REPOSITORY: ${{ env.REGISTRY }}/${{ github.repository_owner }}/frontend
          IMAGE_TAG: ${{ env.VERSION }}
        with:
          context: .
          file: $DOCKERFILE
          target: production
          tags: $IMAGE_REPOSITORY/$IMAGE_TAG
          push: true
